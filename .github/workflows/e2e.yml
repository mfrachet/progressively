name: E2E
on:
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  in-container:
    runs-on: ubuntu-latest
    container: node:16-alpine3.14
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: rollout
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            packages/@rollout/frontend/package-lock.json
            packages/@rollout/backend/package-lock.json

      - name: Creating .env files
        run: mv ./packages/@rollout/frontend/.env.example ./packages/@rollout/frontend/.env && mv ./packages/@rollout/backend/.env.example ./packages/@rollout/backend/.env

      - name: Bootstrap projects
        run: sudo npm run setup:ci

      - name: Prepare the DB
        run: npm run db:prepare

      - name: Build
        run: npm run build

      - name: Start the backend project
        working-directory: ./packages/@rollout/backend
        run: npm start &

      - name: Start the frontend project
        working-directory: ./packages/@rollout/frontend
        run: npm start &

      - name: E2E tests
        run: npx wait-on -t 60000 tcp:4000 && npm run test:e2e:ci
