"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[974],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4416:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s="Raw installation",p={unversionedId:"get-started/raw-installation",id:"get-started/raw-installation",title:"Raw installation",description:"Initial setup (mandatory)",source:"@site/docs/get-started/raw-installation.md",sourceDirName:"get-started",slug:"/get-started/raw-installation",permalink:"/progressively/docs/get-started/raw-installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started/raw-installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/progressively/docs/intro"},next:{title:"Usage with Docker",permalink:"/progressively/docs/get-started/with-docker"}},c={},u=[{value:"Initial setup (mandatory)",id:"initial-setup-mandatory",level:2},{value:"Starting the project",id:"starting-the-project",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"raw-installation"},"Raw installation"),(0,o.kt)("h2",{id:"initial-setup-mandatory"},"Initial setup (mandatory)"),(0,o.kt)("p",null,"In your favorite terminal with git installed, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/mfrachet/progressively\n")),(0,o.kt)("p",null,"Next, you need to make sure you have a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file in both the ",(0,o.kt)("inlineCode",{parentName:"p"},"./packages/frontend")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"./packages/backend")," directories."),(0,o.kt)("p",null,"When cloning the project, a ",(0,o.kt)("inlineCode",{parentName:"p"},".env.example")," file is created as an example in these packages. Make sure to modify them ",(0,o.kt)("strong",{parentName:"p"},"(there are secrets inside)")," and rename them from ",(0,o.kt)("inlineCode",{parentName:"p"},".env.example")," to ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp ./packages/frontend/.env.example ./packages/frontend/.env\ncp ./packages/backend/.env.example ./packages/backend/.env\n")),(0,o.kt)("h2",{id:"starting-the-project"},"Starting the project"),(0,o.kt)("p",null,"You need to install Postgres by yourself. You can have a running instance in a Docker container using the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Make sure to modify the user and password ;)\ndocker run --name progressively-db -e POSTGRES_PASSWORD=admin -e POSTGRES_USER=admin -e POSTGRES_DB=progressively -p 5432:5432 -d postgres\n")),(0,o.kt)("p",null,"Then, run the following commands at the root of the project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\nnpm run setup         # prepares the mono-repo\nnpm run db:prepare    # creates the tables\nnpm run build         # builds the projects and their inter-dependencies\nnpm run start         # start the frontend and the backend\n")),(0,o.kt)("p",null,"The dashboard is now available on ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000"),", the backend APIs are available on ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:4000/api"},"http://localhost:4000/api"),"."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note: this project comes with fixtures to run API and E2E automated tests. You can seed Postgres running the ",(0,o.kt)("inlineCode",{parentName:"em"},"npm run db:seed")," and cleaning up using ",(0,o.kt)("inlineCode",{parentName:"em"},"npm run db:cleanup"),". The following accounts are provided:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"mailto:marvin.frachet@something.com"},"marvin.frachet@something.com")," / password"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"mailto:john.doe@gmail.com"},"john.doe@gmail.com")," / password"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"mailto:jane.doe@gmail.com"},"jane.doe@gmail.com")," / password")))}m.isMDXComponent=!0}}]);