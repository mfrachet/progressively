(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{410:function(e,t,a){"use strict";a.r(t);var s=a(56),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"starting-the-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starting-the-service"}},[e._v("#")]),e._v(" Starting the service")]),e._v(" "),a("h2",{attrs:{id:"get-the-project-from-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-the-project-from-github"}},[e._v("#")]),e._v(" Get the project from Github")]),e._v(" "),a("p",[e._v("In your favorite terminal with git installed, run the following command:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/mfrachet/progressively\n")])])]),a("h2",{attrs:{id:"creating-env-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-env-files"}},[e._v("#")]),e._v(" Creating "),a("code",[e._v(".env")]),e._v(" files")]),e._v(" "),a("blockquote",[a("p",[e._v("ℹ️ This step is required for both usage — with and without Docker")])]),e._v(" "),a("p",[e._v("The next thing to do is to make sure you have a "),a("code",[e._v(".env")]),e._v(" file in both the "),a("code",[e._v("./packages/frontend")]),e._v(" and "),a("code",[e._v("./packages/backend")]),e._v(" packages.")]),e._v(" "),a("p",[e._v("When cloning the repository, a "),a("code",[e._v(".env.example")]),e._v(" file is created as an example in these packages. Make sure to modify them (there are secrets inside) and rename them from "),a("code",[e._v(".env.example")]),e._v(" to "),a("code",[e._v(".env")]),e._v(".")]),e._v(" "),a("p",[e._v("For instance, you can run the following commands at the root of the project to move the "),a("code",[e._v(".env.example")]),e._v(" to "),a("code",[e._v(".env")]),e._v(" files:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" ./packages/frontend/.env.example ./packages/frontend/.env\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" ./packages/backend/.env.example ./packages/backend/.env\n")])])]),a("h2",{attrs:{id:"usage-with-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-with-docker"}},[e._v("#")]),e._v(" Usage with Docker")]),e._v(" "),a("h3",{attrs:{id:"with-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-compose"}},[e._v("#")]),e._v(" With compose")]),e._v(" "),a("p",[e._v("At the root of the project, run the following command:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker-compose")]),e._v(" up\n")])])]),a("p",[e._v("The dashboard is now available on "),a("a",{attrs:{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:3000"),a("OutboundLink")],1),e._v(", the backend APIs are available on "),a("a",{attrs:{href:"http://localhost:4000/api",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:4000/api"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"without-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#without-compose"}},[e._v("#")]),e._v(" Without compose")]),e._v(" "),a("p",[e._v("You can run the postgres container using the following command:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure to modify the user and password ;)")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run --name progressively-db -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("POSTGRES_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("admin -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("POSTGRES_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("admin -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("POSTGRES_DB")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("progressively -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5432")]),e._v(":5432 -d postgres\n")])])]),a("p",[e._v("And make sure the "),a("code",[e._v("postgres")]),e._v(" database has tables in it:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run setup         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# prepares the mono-repo")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run db:prepare    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# creates the tables")]),e._v("\n")])])]),a("p",[e._v("You can and run a backend container using the following command in "),a("code",[e._v("./packages/backend")]),e._v(" (because .env files):")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure to have a .env file the user/password defined for postgres")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run --env-file .env -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4000")]),e._v(":4000 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4001")]),e._v(":4001 mfrachet/progressively-backend\n")])])]),a("p",[e._v("You can and run a frontend container using the following command in "),a("code",[e._v("./packages/frontend")]),e._v(" (because .env files):")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure to have the .env file with the good variables")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run --env-file .env -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3000")]),e._v(":3000 mfrachet/progressively-frontend\n")])])]),a("p",[e._v("The dashboard is now available on "),a("a",{attrs:{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:3000"),a("OutboundLink")],1),e._v(", the backend APIs are available on "),a("a",{attrs:{href:"http://localhost:4000/api",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:4000/api"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"usage-without-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-without-docker"}},[e._v("#")]),e._v(" Usage without Docker")]),e._v(" "),a("p",[e._v("This setup aims to provide a raw installation of the project and can also be used "),a("strong",[e._v("for contributions")]),e._v(".")]),e._v(" "),a("p",[e._v("Before going further, you need to have a running "),a("a",{attrs:{href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Postgres"),a("OutboundLink")],1),e._v(" instance (Docker or locally) with a "),a("code",[e._v("progressively")]),e._v(" database.")]),e._v(" "),a("p",[e._v("Then, at the root of the project, make sure to run the following commands:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run setup         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# prepares the mono-repo")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run db:prepare    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# creates the tables")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run db:seed       "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# (optional) will bring some fixtures")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run build         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# builds the projects and their inter-dependencies")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run start         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# start the frontend and the backend")]),e._v("\n")])])]),a("p",[a("em",[e._v("You can also run "),a("code",[e._v("npm run start:dev")]),e._v(" if you want to benefit from hot reloading in development mode.")])]),e._v(" "),a("p",[e._v("If you have decided to rely on the fixtures, you can now log in the app on "),a("code",[e._v("http://localhost:3000/signin")]),e._v(" with one of the following account:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("marvin.frachet@gmail.com")]),e._v(" / "),a("code",[e._v("password")])]),e._v(" "),a("li",[a("code",[e._v("john.doe@gmail.com")]),e._v(" / "),a("code",[e._v("password")])]),e._v(" "),a("li",[a("code",[e._v("jane.doe@gmail.com")]),e._v(" / "),a("code",[e._v("password")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);